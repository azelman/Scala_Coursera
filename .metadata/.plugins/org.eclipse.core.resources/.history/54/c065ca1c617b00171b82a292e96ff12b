object week6 {
  println("Welcome to the Scala worksheet")       //> Welcome to the Scala worksheet
  val n = 7                                       //> n  : Int = 7
  val lst = 1 until n                             //> lst  : scala.collection.immutable.Range = Range 1 until 7
  val lst2 = lst map (i => (1 until i) map (j => (j,i)))
                                                  //> lst2  : scala.collection.immutable.IndexedSeq[scala.collection.immutable.Ind
                                                  //| exedSeq[(Int, Int)]] = Vector(Vector(), Vector((1,2)), Vector((1,3), (2,3)),
                                                  //|  Vector((1,4), (2,4), (3,4)), Vector((1,5), (2,5), (3,5), (4,5)), Vector((1,
                                                  //| 6), (2,6), (3,6), (4,6), (5,6)))
  def isPrime(in: (Int, Int)): Boolean = 2 until (in._1 + in._2) exists (i => in._1 + in._2 % i != 0)
                                                  //> isPrime: (in: (Int, Int))Boolean
  
  val lst3 = lst2.flatten                         //> lst3  : scala.collection.immutable.IndexedSeq[(Int, Int)] = Vector((1,2), (1
                                                  //| ,3), (2,3), (1,4), (2,4), (3,4), (1,5), (2,5), (3,5), (4,5), (1,6), (2,6), (
                                                  //| 3,6), (4,6), (5,6))
  lst3 filter isPrime                             //> res0: scala.collection.immutable.IndexedSeq[(Int, Int)] = Vector((1,2), (1,3
                                                  //| ), (2,3), (1,4), (2,4), (3,4), (1,5), (2,5), (3,5), (4,5), (1,6), (2,6), (3,
                                                  //| 6), (4,6), (5,6))
}