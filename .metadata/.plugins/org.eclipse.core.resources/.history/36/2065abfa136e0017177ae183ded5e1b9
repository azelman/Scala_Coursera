object week5 {
  println("Welcome to the Scala worksheet")       //> Welcome to the Scala worksheet
  
  val nums = List(1, 2, 3, 4, 5, 6, 7)            //> nums  : List[Int] = List(1, 2, 3, 4, 5, 6, 7)
  
  def removeAt(n: Int, xs: List[Int]): List[Int] = xs match {
  	case Nil => Nil
  	case x :: xs => if(n==0) xs else x :: removeAt(n-1, xs)
  }                                               //> removeAt: (n: Int, xs: List[Int])List[Int]
  
  removeAt(2, nums)                               //> res0: List[Int] = List(1, 2, 4, 5, 6, 7)
  
  def flatten(xs: List[Any]): List[Any] = xs match {
  	case Nil => Nil
  	case List(x) => List(x)
  	case z :: zs => z match {
  		//case y => z :: flatten(zs)
  		case y :: ys  => flatten(y :: ys) ++ flatten(zs)
  	}
  }                                               //> flatten: (xs: List[Any])List[Any]
  

	flatten(List(List(1, 1), 2, List(3, List(5, 8))))
                                                  //> scala.MatchError: 1 (of class java.lang.Integer)
                                                  //| 	at week5$.flatten$1(week5.scala:18)
                                                  //| 	at week5$.flatten$1(week5.scala:18)
                                                  //| 	at week5$.$anonfun$main$1(week5.scala:23)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.$anonfun$$ex
                                                  //| ecute$1(WorksheetSupport.scala:76)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.redirected(W
                                                  //| orksheetSupport.scala:65)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.$execute(Wor
                                                  //| ksheetSupport.scala:76)
                                                  //| 	at week5$.main(week5.scala:1)
                                                  //| 	at week5.main(week5.scala)
  def merge(xs: List[Int], ys: List[Int]): List[Int] =
  (xs, ys) match {
    case (x :: xs, y::ys) => if(x<y) xs ++ ys else merge(y :: xs, x:: ys)
  }
}