object week6 {
  println("Welcome to the Scala worksheet")
  val n = 7
  val lst = 1 until n
  val lst2 = lst flatMap (i => (1 until i) map (j => (j,i)))
  def isPrime(in: Int): Boolean = (2 until in) forall (in % _ != 0)
  
  lst2 filter (pair => isPrime(pair._1 + pair._2))
                                                  
  def scalarProduct(xs: Vector[Double], ys: Vector[Double]): Double = (xs zip ys).map(xy => xy._1 * xy._2).sum
  
  scalarProduct(Vector(1,2,3),Vector(4,5,6))
  
  def scalarProduct2(xs: Vector[Double], ys: Vector[Double]): Double = {
  	(for (a <- (xs zip ys)) yield (a._1 * a._2)).sum
  }
  
  scalarProduct2(Vector(1,2,3),Vector(4,5,6))
}