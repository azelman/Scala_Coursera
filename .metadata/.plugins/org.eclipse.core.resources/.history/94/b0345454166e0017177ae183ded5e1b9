object week5 {
  println("Welcome to the Scala worksheet")       //> Welcome to the Scala worksheet
  
  val nums = List(1, 2, 3, 4, 5, 6, 7)            //> nums  : List[Int] = List(1, 2, 3, 4, 5, 6, 7)
  
  def removeAt(n: Int, xs: List[Int]): List[Int] = xs match {
  	case Nil => Nil
  	case x :: xs => if(n==0) xs else x :: removeAt(n-1, xs)
  }                                               //> removeAt: (n: Int, xs: List[Int])List[Int]
  
  removeAt(2, nums)                               //> res0: List[Int] = List(1, 2, 4, 5, 6, 7)
  
  def flatten(xs: List[Any]): List[Any] = xs match {
  	case Nil => Nil
  	case List(x) => List(x)
  	case  z :: zs => z match {
  		case y :: ys  => flatten(y :: ys) ::: flatten(zs)
  		case Number(y) => z :: zs
  	}
  }                                               //> flatten: (xs: List[Any])List[Any]
  

	flatten(List(List(1, 2), 3, List(4, List(5, 6))))
                                                  //> res1: List[Any] = List(1, 2, 3, List(4, List(5, 6)))
	flatten(List(4, List(5, 6)))              //> res2: List[Any] = List(4, List(5, 6))
  def merge(xs: List[Int], ys: List[Int]): List[Int] =
  (xs, ys) match {
    case (x :: xs, y::ys) => if(x<y) xs ++ ys else merge(y :: xs, x:: ys)
  }                                               //> merge: (xs: List[Int], ys: List[Int])List[Int]
}